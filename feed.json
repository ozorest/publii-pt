{
    "version": "https://jsonfeed.org/version/1",
    "title": "zozo.log - pt 🇧🇷 🇵🇹",
    "description": "",
    "home_page_url": "https://logs-pt.zozo.dev.br",
    "feed_url": "https://logs-pt.zozo.dev.br/feed.json",
    "user_comment": "",
    "author": {
        "name": "Thiago (Zozô) Ozores 🇧🇷"
    },
    "items": [
        {
            "id": "https://logs-pt.zozo.dev.br/diagramas-como-codigo.html",
            "url": "https://logs-pt.zozo.dev.br/diagramas-como-codigo.html",
            "title": "Diagramas como Código",
            "summary": "<p>Venha, venha, venha descobrir como gerar diagramas usando código Python!!</p>\n",
            "content_html": "<p>Venha, venha, venha descobrir como gerar diagramas usando código Python!!</p>\n\n\n<p>No meu dia-a-dia de instrutor, um dos trabalhos é a criação de diagramas que ilustrem de forma clara para os alunos o tópico que está sendo apresentado, existem muitas boas ferramentas gráficas online como o <a href=\"https://draw.io\">draw.io</a>, <a href=\"https://www.lucidchart.com\">LucidChart</a>, entre outras.</p>\n<p>Porém apesar dessas ferramentas serem bem intuitivas e fáceis de usar, quando você precisa escalar a criação de diagramas, precisa criar diagramas trazendo informações de ferramentas externas ou mesmo criar diagramas simples de forma rápida, você acaba esbarrando em problemas nas opções de formatação e na falta de uma automação dessas ferramentas, que dificultam a criação de uma “fábrica” de diagramas.</p>\n<p>Pensando neste cenário, o Python tem um pacote que pode ser utilizado para representar e gerar diagramas como código, facilitando a criação dessa “fábrica”.</p>\n<p>O pacote se chama <a href=\"https://diagrams.mingrammer.com\">diagrams</a> e ele tem uma forma bem interessante de funcionamento, ele faz uso da sobrecarga de operadores do Python para realizar de forma mais intuitiva a ligação que os nós terão nos gráficos do diagrama. Por exemplo: </p>\n<ul>\n<li>O operador <code>&gt;&gt;</code> representa uma ligação da direita para esquerda</li>\n<li>O operador <code>&lt;&lt;</code> representa uma ligação da esquerda para direita</li>\n<li>O operador <code>-</code> representa uma ligação sem direção</li>\n<li>E ainda é possível fazer ligações bidirecionais usando a classe <code>Edge</code></li>\n</ul>\n<p>Se você procura uma forma mais programatica de gerar diagramas, vale a pena dar uma olhada nesse pacote.</p>\n<p>Abaixo seguem alguns exemplos que eu desenvolvi, que podem ser testados no <a href=\"https://colab.research.google.com/drive/1MrlVVFXAAMvuQJ8m-qkyY05wnurAl5uQ?usp=sharing\">Google Colab</a></p>\n<script src=\"https://gist.github.com/ozorest/c19718ac3d3bdcd0cbc3c8a96d093e48.js\"></script>",
            "image": "https://logs-pt.zozo.dev.br/media/posts/5/python-diagrama-3.png",
            "author": {
                "name": "Thiago (Zozô) Ozores 🇧🇷"
            },
            "tags": [
                   "python",
                   "diagramas"
            ],
            "date_published": "2022-05-05T13:22:00-03:00",
            "date_modified": "2022-06-12T20:23:53-03:00"
        }
    ]
}
